"""add timeseries and metrics

Revision ID: cb23a78d2118
Revises: 127e35875881
Create Date: 2020-12-10 12:08:54.231384

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "cb23a78d2118"
down_revision = "127e35875881"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "series",
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "revision", sa.Integer(), server_default=sa.text("1"), nullable=False
        ),
        sa.Column("uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("item_uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(["item_uuid"], ["items.uuid"],),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_index(op.f("ix_series_item_uuid"), "series", ["item_uuid"], unique=False)
    op.create_table(
        "metrics",
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "revision", sa.Integer(), server_default=sa.text("1"), nullable=False
        ),
        sa.Column("ts", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("series_uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(["series_uuid"], ["series.uuid"],),
        sa.PrimaryKeyConstraint("series_uuid", "ts"),
    )
    op.create_index(
        op.f("ix_metrics_series_uuid"), "metrics", ["series_uuid"], unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_metrics_series_uuid"), table_name="metrics")
    op.drop_table("metrics")
    op.drop_index(op.f("ix_series_item_uuid"), table_name="series")
    op.drop_table("series")
    # ### end Alembic commands ###
