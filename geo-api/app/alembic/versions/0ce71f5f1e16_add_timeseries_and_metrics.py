"""add timeseries and metrics

Revision ID: 0ce71f5f1e16
Revises: 127e35875881
Create Date: 2020-12-10 09:44:11.084795

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0ce71f5f1e16'
down_revision = '127e35875881'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('timeseries',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('item_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['item_uuid'], ['items.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_timeseries_item_uuid'), 'timeseries', ['item_uuid'], unique=False)
    op.create_table('metrics',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('ts', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('series_uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['series_uuid'], ['timeseries.uuid'], ),
    sa.PrimaryKeyConstraint('series_uuid', 'ts')
    )
    op.create_index(op.f('ix_metrics_series_uuid'), 'metrics', ['series_uuid'], unique=False)
    op.create_unique_constraint(None, 'acls', ['uuid'])
    op.create_unique_constraint(None, 'collections', ['uuid'])
    op.drop_index('idx_items_geometry', table_name='items')
    op.create_unique_constraint(None, 'items', ['uuid'])
    op.create_unique_constraint(None, 'providers', ['uuid'])
    op.alter_column('users', 'password',
               existing_type=sa.TEXT(),
               nullable=False)
    op.create_unique_constraint(None, 'users', ['uuid'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'password',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_constraint(None, 'providers', type_='unique')
    op.drop_constraint(None, 'items', type_='unique')
    op.create_index('idx_items_geometry', 'items', ['geometry'], unique=False)
    op.drop_constraint(None, 'collections', type_='unique')
    op.drop_constraint(None, 'acls', type_='unique')
    op.drop_index(op.f('ix_metrics_series_uuid'), table_name='metrics')
    op.drop_table('metrics')
    op.drop_index(op.f('ix_timeseries_item_uuid'), table_name='timeseries')
    op.drop_table('timeseries')
    # ### end Alembic commands ###
