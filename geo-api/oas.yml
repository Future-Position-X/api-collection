---
swagger: "2.0"
info:
  description: "GIA geo api"
  version: "2020-04-22T13:02:23Z"
  title: "dev-geo-api"
  contact:
    name: "Magnus Engstr√∂m"
    url: "http://fpx.se"
    email: "magnus.engstrom@fpx.se"
host: "6u888su1il.execute-api.eu-north-1.amazonaws.com"
basePath: "/dev"
schemes:
- "https"
paths:
  /collections:
    get:
      summary: "Collection index"
      description: "All accessable Collections"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Collections"
  /collections/{collection_uuid_or_name}/items:
    get:
      summary: "Get items belonging to a collection"
      description: "All accessable items belonging to collection"
      produces:
      - "application/json"
      parameters:
      - name: "collection_uuid_or_name"
        in: "path"
        description: "collection uuid or collection name"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "offset"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Items"
        500:
          description: "500 response"
        404:
          description: "404 response"
    post:
      summary: "Create item"
      description: "Create item"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "collection_uuid_or_name"
        in: "path"
        description: "collection uuid or collection name"
        required: false
        type: "string"
      - in: "body"
        name: "CreateItem"
        required: true
        schema:
          $ref: "#/definitions/CreateItem"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/Uuid"
        500:
          description: "500 response"
        404:
          description: "404 response"
  /collections/{collection_uuid_or_name}/items/geojson:
    get:
      summary: "Get items belonging to a collection as geojson FeatureCollection"
      description: "All accessable items belonging to collection as geojson FeatureCollection"
      produces:
      - "application/json"
      parameters:
      - name: "collection_uuid_or_name"
        in: "path"
        description: "collection uuid or collection name"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "offset"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/FeatureCollection"
        500:
          description: "500 response"
        404:
          description: "404 response"
    post:
      summary: "Remove all items in collection and add those in geojson FeatureCollection"
      description: "Remove all items in collection and add those in geojson FeatureCollection"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "collection_uuid_or_name"
        in: "path"
        description: "collection uuid or collection name"
        required: false
        type: "string"
      - in: "body"
        name: "FeatureCollection"
        required: true
        schema:
          $ref: "#/definitions/FeatureCollection"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/Uuids"
        500:
          description: "500 response"
        404:
          description: "404 response"
    put:
      summary: "Add items to collection from geojson FeatureCollection"
      description: "Add items to collection from geojson FeatureCollection"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "collection_uuid_or_name"
        in: "path"
        description: "collection uuid or collection name"
        required: false
        type: "string"
      - in: "body"
        name: "FeatureCollection"
        required: true
        schema:
          $ref: "#/definitions/FeatureCollection"
      responses:
        201:
          description: "201 response"
          schema:
            $ref: "#/definitions/Uuids"
        500:
          description: "500 response"
        404:
          description: "404 response"
  /collections/{collection_uuid_or_name}/items/png:
    get:
      summary: "Get items belonging to a collection rendered on a png image"
      description: "Get items belonging to a collection rendered on a png image"
      produces:
      - "image/png"
      parameters:
      - name: "collection_uuid_or_name"
        in: "path"
        description: "collection uuid or collection name"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "offset"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ImagePng"
        500:
          description: "500 response"
        404:
          description: "404 response"
  /items/within-radius:
    get:
      summary: "Get items within radius in meters of point as geojson FeatureCollection"
      description: "Get items within radius in meters of point as geojson FeatureCollection."
      produces:
      - "application/json"
      parameters:
      - name: "radius"
        in: "query"
        description: "Radius in meter"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "string"
      - name: "coordinates"
        in: "query"
        description: "Point coordinates, ie. coordinates=lng,lat"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "offset"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/FeatureCollection"
        500:
          description: "500 response"
        404:
          description: "404 response"
  /items/{item_uuid}:
    put:
      summary: "Update item"
      description: "Update item"
      consumes:
      - "application/json"
      parameters:
      - name: "item_uuid"
        in: "path"
        description: "Item uuid"
        required: false
        type: "string"
      - in: "body"
        name: "UpdateItem"
        required: true
        schema:
          $ref: "#/definitions/UpdateItem"
      responses:
        500:
          description: "500 response"
        204:
          description: "204 response"
        404:
          description: "404 response"
    delete:
      summary: "Delete item"
      description: "Delete item"
      parameters:
      - name: "item_uuid"
        in: "path"
        description: "Item uuid"
        required: false
        type: "string"
      responses:
        500:
          description: "500 response"
        204:
          description: "204 response"
        404:
          description: "404 response"
  /items/{item_uuid}/geojson:
    get:
      summary: "Get item as geojson FeatureCollection"
      description: "Get item as geojson FeatureCollection."
      produces:
      - "application/json"
      parameters:
      - name: "item_uuid"
        in: "path"
        description: "Item uuid"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/FeatureCollection"
        500:
          description: "500 response"
        404:
          description: "404 response"
  /items/{item_uuid}/png:
    get:
      summary: "Get item as png image"
      description: "Get item as png image"
      produces:
      - "image/png"
      parameters:
      - name: "item_uuid"
        in: "path"
        description: "Item uuid"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ImagePng"
        500:
          description: "500 response"
        404:
          description: "404 response"
  /ping:
    get:
      responses: {}
definitions:
  Geometry:
    type: "object"
    properties:
      coordinates:
        type: "array"
      type:
        type: "string"
        enum:
        - "Point"
        - "LineString"
        - "Polygon"
        - "MultiPoint"
        - "MultiLineString"
        - "MultiPolygon"
      properties:
        type: "object"
        properties: {}
    description: "This is an Geometry object"
  Item:
    type: "object"
    properties:
      provider_uuid:
        type: "string"
      updated_at:
        type: "string"
      created_at:
        type: "string"
      collection_uuid:
        type: "string"
      geometry:
        type: "string"
      uuid:
        type: "string"
      properties:
        type: "object"
        properties: {}
      revision:
        type: "number"
    description: "This is an Item object"
  ImagePng:
    type: "string"
    format: "binary"
    description: "Image in png format"
  Uuid:
    type: "string"
    description: "Uuid"
  FeatureCollection:
    type: "object"
    properties:
      features:
        type: "array"
        items:
          $ref: "#/definitions/Feature"
      type:
        type: "string"
        enum:
        - "FeatureCollection"
    description: "GeoJSON FeatureCollection"
  UpdateItem:
    type: "object"
    properties:
      provider_uuid:
        type: "string"
      collection_uuid:
        type: "string"
      geometry:
        type: "string"
      properties:
        type: "object"
        properties: {}
    description: "This is an Item object"
  CreateItem:
    type: "object"
    properties:
      provider_uuid:
        type: "string"
      collection_uuid:
        type: "string"
      geometry:
        type: "string"
      properties:
        type: "object"
        properties: {}
    description: "This is an Item object"
  Collection:
    type: "object"
    properties:
      provider_uuid:
        type: "string"
      updated_at:
        type: "string"
      name:
        type: "string"
      is_public:
        type: "boolean"
      created_at:
        type: "string"
      uuid:
        type: "string"
      revision:
        type: "number"
    description: "This is an Collection object"
  Items:
    type: "array"
    description: "Array of Item objects"
    items:
      $ref: "#/definitions/Item"
  Collections:
    type: "array"
    description: "Array of Collection objects"
    items:
      $ref: "#/definitions/Collection"
  Uuids:
    type: "array"
    description: "Uuids"
    items:
      $ref: "#/definitions/Uuid"
  Feature:
    type: "object"
    properties:
      geometry:
        $ref: "#/definitions/Geometry"
      id:
        type: "string"
      type:
        type: "string"
        enum:
        - "Feature"
      properties:
        type: "object"
        properties: {}
    description: "This is an Feature object"
