# This is a basic workflow to help you get started with Actions

name: Test geo-api

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [ master ]
    paths:
      - 'geo-api/**'
      - '.github/**'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      working-directory: ./geo-api
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      working-directory: ./geo-api
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      working-directory: ./geo-api
      run: |
        docker-compose up -d
        docker-compose exec pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        docker-compose exec flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        docker-compose exec flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        docker-compose exec -e DATABASE_URL_TESTING=postgresql://master:master@postgis:5432/testing -e APP_SETTINGS=testing -e USER_PASSWORD=test webserver flask db upgrade
        docker-compose exec -e DATABASE_URL_TESTING=postgresql://master:master@postgis:5432/testing webserver pytest --runslow
